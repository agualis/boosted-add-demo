import { exec } from 'child_process';
import util from 'util';

test('cast trace', async () => {
  await runCastTrace();
});

async function runCastTrace() {
  const execPromise = util.promisify(exec);
  const rpcUrl = 'http://localhost:8545';
  const fromAddress = '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266';
  const contractAddress = '0xb21A277466e7dB6934556a1Ce12eb3F032815c8A';
  const callData =
    '0x19c6989f00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000b21a277466e7db6934556a1ce12eb3f032815c8affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000000000000100000000000000000000000040d16fc0246ad3160ccc09b8d0d3a2cd28ae6c2f0000000000000000000000007fffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000068232b5f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041c0e34bfb33ff061fd41e6fe05df26d22e790f47bfee59aa1761af0c7b53c32c1538d74e0fe3a3fb247541a99d2d4513e0023cc6cdfbb6ca09e19da6a8aa427d41c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001e4c1da024c00000000000000000000000085b2b559bc2d21104c4defdd6efca8a20343361d00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000005558699c996ea1ada000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000056bc75e2d631000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';
  const value = 0;

  const command = `cast call \\
    --rpc-url ${rpcUrl} \\
    --from ${fromAddress} \\
    ${contractAddress} \\
    "${callData}" \\
    --value ${value} \\
    --trace`;

  try {
    const { stdout, stderr } = await execPromise(command, {
      maxBuffer: 1024 * 1024 * 10,
    });

    if (stderr) {
      console.error('Error during cast call:', stderr);
    }

    console.log('Cast Trace Output:');
    console.log(stdout);
    return stdout;
  } catch (error) {
    console.log('Failed to execute cast command:', error);
    throw error;
  }
}
